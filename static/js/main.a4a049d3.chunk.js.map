{"version":3,"sources":["components/cardfront.jsx","components/flipcard.jsx","App.js","serviceWorker.js","index.js"],"names":["CardFront","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","metadata","react_default","a","createElement","className","viewBox","transform","fill","d","style","React","Component","Card","coin","e","setState","loading2","checked","fetchStock","date","arguments","length","undefined","dates","pointerToThis","assertThisInitialized","console","log","market","API_Call","concat","fetch","then","response","json","data","Information","Note","alert","obj","open","high","low","close","dat2a","keys","splice","indexOf","obj2","forEach","key","x","ke2y","i","push","err","loading","flip","stockChartXValues_open","stockChartYValues_open","stockChartXValues_close","stockChartYValues_close","top","display","right","justifyContent","alignItems","dist_default","type","color","height","width","timeout","cardfront_CardFront","FlippingCardPage","flipcard_Card","App","flipcard_FlippingCardPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4a049d3.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n// import DTimePicker from \"./datetime\"\r\n// import Switch from \"react-switch\";\r\n\r\n// React component for the front side of the card\r\nexport default class CardFront extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metadata: {},\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const metadata = this.props.metadata\r\n\r\n        return (\r\n\r\n            <div className=\"  card\">\r\n\r\n                <div className=\"banner flex-fill\">\r\n                    <svg viewBox=\"30 1 6 60\" >\r\n                        <g transform=\"translate(0.00630876,-0.00301984)\">\r\n                            <path fill=\"#f7931a\" d=\"m63.033,39.744c-4.274,17.143-21.637,27.576-38.782,23.301-17.138-4.274-27.571-21.638-23.295-38.78,4.272-17.145,21.635-27.579,38.775-23.305,17.144,4.274,27.576,21.64,23.302,38.784z\" />\r\n                            <path fill=\"#FFF\" d=\"m46.103,27.444c0.637-4.258-2.605-6.547-7.038-8.074l1.438-5.768-3.511-0.875-1.4,5.616c-0.923-0.23-1.871-0.447-2.813-0.662l1.41-5.653-3.509-0.875-1.439,5.766c-0.764-0.174-1.514-0.346-2.242-0.527l0.004-0.018-4.842-1.209-0.934,3.75s2.605,0.597,2.55,0.634c1.422,0.355,1.679,1.296,1.636,2.042l-1.638,6.571c0.098,0.025,0.225,0.061,0.365,0.117-0.117-0.029-0.242-0.061-0.371-0.092l-2.296,9.205c-0.174,0.432-0.615,1.08-1.609,0.834,0.035,0.051-2.552-0.637-2.552-0.637l-1.743,4.019,4.569,1.139c0.85,0.213,1.683,0.436,2.503,0.646l-1.453,5.834,3.507,0.875,1.439-5.772c0.958,0.26,1.888,0.5,2.798,0.726l-1.434,5.745,3.511,0.875,1.453-5.823c5.987,1.133,10.489,0.676,12.384-4.739,1.527-4.36-0.076-6.875-3.226-8.515,2.294-0.529,4.022-2.038,4.483-5.155zm-8.022,11.249c-1.085,4.36-8.426,2.003-10.806,1.412l1.928-7.729c2.38,0.594,10.012,1.77,8.878,6.317zm1.086-11.312c-0.99,3.966-7.1,1.951-9.082,1.457l1.748-7.01c1.982,0.494,8.365,1.416,7.334,5.553z\" />\r\n                        </g>\r\n                    </svg>\r\n\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <div className=\"opener\"><span></span><span></span><span></span></div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"border border-bottom-0 border-top-0 d-flex flex-column h-100 justify-content-center\" style={{\r\n\r\n                    }}>\r\n\r\n\r\n                        <h2 className=\"name\">{metadata[\"1. Information\"]}</h2>\r\n                        <div className=\"title\">{metadata[\"2. Digital Currency Code\"]}|{metadata[\"3. Digital Currency Name\"]}</div>\r\n                        <div className=\"desc\">Last Refreshed : <br />{metadata[\"6. Last Refreshed\"]} | {metadata[\"7. Time Zone\"]}</div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"col px-sm-4\" style={{\r\n                }} >\r\n                    <div className=\"actions\">\r\n                        <div className=\"follow-info\">\r\n                            <h2><a href=\"#\"><span>{metadata[\"4. Market Code\"]}</span><small>Market_Code</small></a></h2>\r\n                            <h2><a href=\"#\"><span>{metadata[\"5. Market Name\"]}</span><small>Market_Name</small></a></h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span>USA/ILS</span>\r\n                        <label>\r\n\r\n                            <Switch\r\n                                checkedIcon={<div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                        height: \"100%\",\r\n                                        fontSize: 15,\r\n                                        color: \"red\",\r\n                                        paddingRight: 2\r\n                                    }}\r\n                                >\r\n                                    USA\r\n                                </div>}\r\n                                uncheckedIcon={\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                            alignItems: \"center\",\r\n                                            height: \"100%\",\r\n                                            fontSize: 15,\r\n                                            color: \"blue\",\r\n                                            paddingRight: 2\r\n                                        }}\r\n                                    >\r\n                                        ILS\r\n                                    </div>\r\n                                }\r\n                                onChange={() => {\r\n                                    this.props.coin()\r\n\r\n                                }} checked={this.props.checked} />\r\n                        </label>\r\n                    </div>\r\n\r\n                    {this.props.err ? <span className=\"text-danger\">DATE NOT FOUND</span> : \"\"}\r\n\r\n                    <DTimePicker\r\n                        type=\"start\"\r\n                        fetchStock={this.props.fetchStock} />\r\n\r\n\r\n                    <div className=\"follow-btn pb-1 pt-1\">\r\n\r\n                        <button onClick={this.props.flip}>PICK & GO / GO</button>\r\n                    </div>\r\n\r\n                </div> */}\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport CardFront from \"./cardfront\"\r\n// import Stock from \"./Stock\"\r\nimport \"../css/card.css\"\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            metadata: {},\r\n            stockChartXValues_open: [],\r\n            stockChartYValues_open: [],\r\n            stockChartXValues_close: [],\r\n            stockChartYValues_close: [],\r\n            data: {},\r\n            flip: false,\r\n            loading: true,\r\n            err: false,\r\n            coin: \"ILS\",\r\n            checked: false,\r\n            loading2: true,\r\n            dates: []\r\n        }\r\n\r\n    }\r\n    coin = e => {\r\n\r\n        this.setState((state) => {\r\n            return { loading2: true, checked: !this.state.checked, coin: state.coin === \"ILS\" ? \"USD\" : \"ILS\" }\r\n        }\r\n            , () => this.fetchStock())\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n    fetchStock = (date = this.state.dates) => {\r\n        const pointerToThis = this;\r\n        console.log(pointerToThis);\r\n        const API_KEY = 'HGJWFG4N8AQ66ICD'; //'F41ON15LGCFM4PR7';// \"9V66ST5SY883CWI1\"//\"GPT5COX9H2LGBQ8Y\"//\r\n        let StockSymbol = 'BTC';\r\n        let market = this.state.coin;\r\n        let API_Call = `https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=${StockSymbol}&market=${market}&outputsize=compact&apikey=${API_KEY}`;\r\n\r\n        fetch(API_Call)\r\n            .then(\r\n                function (response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function (data) {\r\n                    console.log(data);\r\n                    if (data.Information || data.Note) {\r\n                        alert(data.Information || data.Note)\r\n                        return\r\n                    }\r\n                    let coin = pointerToThis.state.coin\r\n                    const obj = {\r\n                        dates: [],\r\n                        open: [],\r\n                        high: [],\r\n                        low: [],\r\n                        close: [],\r\n                    }\r\n                    if (!date.length) {\r\n\r\n                        const keys = Object.keys(obj)\r\n                        var x = (key) => {\r\n                            [`1a. open (${coin})`, `2a. high (${coin})`, `3a. low (${coin})`, `4a. close (${coin})`].forEach((ke2y, i) => {\r\n                                ke2y = data['Time Series (Digital Currency Daily)'][key][ke2y]\r\n                                obj[keys[i + 1]].push(ke2y)\r\n                            });\r\n\r\n                        }\r\n\r\n                        for (var key in data['Time Series (Digital Currency Daily)']) {\r\n                            obj.dates.push(key);\r\n                            x(key)\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n\r\n                        if (data['Time Series (Digital Currency Daily)'][date[0]]) {\r\n                            let dat2a = data['Time Series (Digital Currency Daily)']\r\n                            let dates = Object.keys(dat2a)\r\n                            dates.splice(dates.indexOf(date[0]) + 1, dates.length);\r\n                            console.log(dat2a)\r\n                            dates.splice(0, dates.indexOf(date[1]) - 1);\r\n                            console.log(dat2a)\r\n                            let obj2 = {}\r\n                            dates.forEach((d) => {\r\n                                obj2[d] = data['Time Series (Digital Currency Daily)'][d]\r\n                            })\r\n\r\n                            let keys = Object.keys(obj)\r\n                            x = (key) => {\r\n                                [`1a. open (${coin})`, `2a. high (${coin})`, `3a. low (${coin})`, `4a. close (${coin})`]\r\n                                    .forEach((ke2y, i) => {\r\n                                        ke2y = obj2[key][ke2y]\r\n                                        obj[keys[i + 1]].push(ke2y)\r\n                                    });\r\n\r\n                            }\r\n                            for (key in obj2) {\r\n                                obj.dates.push(key);\r\n                                x(key)\r\n\r\n                            }\r\n\r\n                        } else {\r\n                            pointerToThis.setState({ err: true })\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    if (obj.dates.length) {\r\n                        pointerToThis.setState({\r\n                            loading2: false,\r\n                            err: false,\r\n                            loading: false,\r\n                            metadata: data['Meta Data'],\r\n                            data: obj,\r\n                            dates: date\r\n\r\n                        });\r\n\r\n                    }\r\n                    else {\r\n                        pointerToThis.setState({ err: true })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n    flip = e => {\r\n\r\n        this.setState({ flip: !this.state.flip }, () => console.log(this.state.flip))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.loading ?\r\n                <div className=\"poster-container\" style={{\r\n                    top: \"20px\",\r\n                    display: \"flex\",\r\n                    right: \"12px\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}>\r\n                    <Loader\r\n                        type=\"Circles\"\r\n                        color=\"#ff9800\"\r\n                        height={300}\r\n                        width={300}\r\n                        timeout={5000}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className=\" container \">\r\n\r\n                    <div className={this.state.flip ? \"poster flipped\" : \"poster\"}>\r\n\r\n                        <div className=\" pb-4 pic\">\r\n\r\n                            <CardFront\r\n                                coin={this.coin}\r\n                                err={this.state.err}\r\n                                metadata={this.state.metadata}\r\n                                flip={this.flip}\r\n                                fetchStock={this.fetchStock}\r\n                                checked={this.state.checked}\r\n                            />\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"back container pic \">\r\n                            {/* <Stock\r\n                                flip={this.flip}\r\n                                coin={this.coin}\r\n                                checked={this.state.checked}\r\n                                loading={this.state.loading2}\r\n                                data={this.state.data}\r\n                            /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class FlippingCardPage extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"container \">\r\n                <Card />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  FlippingCardPage;","import React from 'react';\nimport FlippingCardPage from './components/flipcard';\nimport './css/App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <FlippingCardPage />\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}